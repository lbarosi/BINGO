#tic()
#Signal(c(sites[1,]$lon,sites[1,]$lat))
#exectime <- toc()
#Signaltime <- exectime$toc - exectime$toc
# 3.414 sec elapsed
#############
seed  <- 8
n     <- 100
delta <- 0.25 #Raio de 120km
cajazeiras      <- geocode("Cajazeiras Paraiba Brasil")
CampinaGrande   <- geocode("Cajazeiras Paraiba Brasil")
Sossego         <- geocode("Sossego Paraiba Brasil")
Sume            <- geocode("Sume Paraiba Brasil")
Passagem        <- geocode("Passagem Paraiba Brasil")
Pianco          <- geocode("Pianco Paraiba Brasil")
Balanca         <- geocode("Balanca Paraiba Brasil")
SJTapada        <- geocode("São José da Lagoa Tapada Paraiba Brasil")
SJPeixe         <- geocode("São João do Rio do Peixe Paraiba Brasil")
SJPiranhas      <- geocode("São Jose de Piranhas Paraiba Brasil")
tic()
Rcajazeiras      <- randomSitios(n,cajazeiras[[1]]-delta,cajazeiras[[1]]+delta,
cajazeiras[[2]]-delta,cajazeiras[[2]]+delta,seed,
"./RandomSites/Rcajazeiras.csv")
exectime <- toc()
Signaltime <- exectime$toc - exectime$toc
View(cajazeiras)
randomSitios <- function(n,xmin,xmax,ymin,ymax,seed,name){
set.seed(seed)
lat <- runif(n,ymin,ymax)
lon <- runif(n,xmin,xmax)
RandomSites <- cbind(lon,lat) %>% as.data.frame()
coordinates(RandomSites) <- c("lon","lat")
proj4string(RandomSites) <- proj4string(municipios)
RandomSites$mun <- over(RandomSites,municipios)$NOME_MUN1
#RandomSites %<>% select(., lon, lat)
RandomSites <- as.data.frame(RandomSites) %>% filter(.,!is.na(mun))
noiseRandom <- verificaSitios(RandomSites)
coordinates(noiseRandom) <- c("lon","lat")
proj4string(noiseRandom) <- proj4string(municipios)
noiseRandom$mun <- over(noiseRandom,municipios)$NOME_MUN1 %>% as.data.frame()
#silencio    <- filter(noiseRandom, Ruído < -70)
write.csv(noiseRandom,name, row.names = FALSE)
return(noiseRandom)
}
seed  <- 9
n     <- 100
delta <- 0.25 #Raio de 120km
tic()
Rcajazeiras      <- randomSitios(n,cajazeiras[[1]]-delta,cajazeiras[[1]]+delta,
cajazeiras[[2]]-delta,cajazeiras[[2]]+delta,seed,
"./RandomSites/Rcajazeiras.csv")
#-------------------------------------
RCampinaGrande   <- randomSitios(n,CampinaGrande[[1]]-delta,CampinaGrande[[1]]+delta,
CampinaGrande[[2]]-delta,CampinaGrande[[2]]+delta,seed,
"./RandomSites/CampinaGrande.csv")
RSossego         <- randomSitios(n,Sossego[[1]]-delta,Sossego[[1]]+delta,
Sossego[[2]]-delta,Sossego[[2]]+delta,seed,
"./RandomSites/Sossego.csv")
RSume            <- randomSitios(n,Sume[[1]]-delta,Sume[[1]]+delta,
Sume[[2]]-delta,Sume[[2]]+delta,seed,
"./RandomSites/Sume.csv")
RPassagem        <- randomSitios(n,Passagem[[1]]-delta,Passagem[[1]]+delta,
Passagem[[2]]-delta,Passagem[[2]]+delta,seed,
"./RandomSites/Passagem.csv")
RPianco          <- randomSitios(n,Pianco[[1]]-delta,Pianco[[1]]+delta,
Pianco[[2]]-delta,Pianco[[2]]+delta,seed,
"./RandomSites/Pianco.csv")
RBalanca         <- randomSitios(n,Balanca[[1]]-delta,Balanca[[1]]+delta,
Balanca[[2]]-delta,Balanca[[2]]+delta,seed,
"./RandomSites/Balanca.csv")
RSJtapada        <- randomSitios(n,SJtapada[[1]]-delta,SJtapada[[1]]+delta,
SJtapada[[2]]-delta,SJtapada[[2]]+delta,seed,
"./RandomSites/SJPiranhas.csv")
RSPeixe          <- randomSitios(n,SJPeixe[[1]]-delta,SJPeixe[[1]]+delta,
SJPeixe[[2]]-delta,SJPeixe[[2]]+delta,seed,
"./RandomSites/SJPeixe.csv")
View(SJTapada)
RSJtapada        <- randomSitios(n,SJtapada[[1]]-delta,SJtapada[[1]]+delta,
SJtapada[[2]]-delta,SJtapada[[2]]+delta,seed,
"./RandomSites/SJPiranhas.csv")
Q
RSJtapada        <- randomSitios(n,SJtapada[[1]]-delta,SJtapada[[1]]+delta,
SJtapada[[2]]-delta,SJtapada[[2]]+delta,seed,
"./RandomSites/SJPiranhas.csv")
RSJTapada        <- randomSitios(n,SJTapada[[1]]-delta,SJTapada[[1]]+delta,
SJTapada[[2]]-delta,SJTapada[[2]]+delta,seed,
"./RandomSites/SJPiranhas.csv")
RSPeixe          <- randomSitios(n,SJPeixe[[1]]-delta,SJPeixe[[1]]+delta,
SJPeixe[[2]]-delta,SJPeixe[[2]]+delta,seed,
"./RandomSites/SJPeixe.csv")
Q
Q
RSPeixe          <- randomSitios(n,SJPeixe[[1]]-delta,SJPeixe[[1]]+delta,
SJPeixe[[2]]-delta,SJPeixe[[2]]+delta,seed,
"./RandomSites/SJPeixe.csv")
RSPiranhas       <- randomSitios(n,SJPiranhas[[1]]-delta,SJPiranhas[[1]]+delta,
SJPiranhas[[2]]-delta,SJPiranhas[[2]]+delta,seed,
"./RandomSites/SJPiranhas.csv")
exectime <- toc()
Signaltime <- exectime$toc - exectime$toc
library(tictoc)
source("./findSites.R")
pal <- colorNumeric(c("#0C2C84", "#41B6C4", "#FFFFCC"), values(Paraiba),
na.color = "transparent")
P4S.latlon <- CRS("+proj=longlat +datum=WGS84")
hrr.shp <- readShapePoly("./GEODATA/municipiosPB/i3geomap_municipios_pb", verbose=TRUE, proj4string=P4S.latlon)
#Carrega dados
#cariri      <- read.csv("./cariri.csv")
#curimatau   <- read.csv("./curimatau.csv")
#patos       <- read.csv("./patos.csv")
#cajazeiras  <- read.csv("./cajazeiras.csv")
#pianco      <- read.csv("./pianco.csv")
#silencio    <- read.csv("./silencio.csv")
#silencio    %<>% unique()
#Carrega todos os arquivos em ./RandomSites
files       <- list.dirs("./RandomSites")
sitios      <- sapply(files, function(i) {read.csv(i)})
sitios      <- do.call(rbind,sitios) %>% as.data.frame()
files       <- list.dirs("./RandomSites")
files       <- list.files("./RandomSites")
sitios      <- sapply(files, function(i) {read.csv(i)})
files       <- list.files("./RandomSites")
sitios      <- sapply(files, function(i) {
name <- paste("./RandomSites",i,sep="");
read.csv(name)
})
sitios      <- sapply(files, function(i) {
name <- paste("./RandomSites/",i,sep="");
read.csv(name)
})
sitios      <- do.call(rbind,sitios) %>% as.data.frame()
View(sitios)
sitios      <- lapply(files, function(i) {
name <- paste("./RandomSites/",i,sep="");
read.csv(name)
})
sitios      <- do.call(rbind,sitios) %>% as.data.frame()
View(sitios)
silencio    <- sitios <- filter(., Ruído < 70)
silencio    <- sitios <- filter(., Ruido < 70)
silencio    <- sitios %>% filter(., Ruido < 70)
silencio    <- sitios %>% filter(., Ruído < 70)
silencio    <- sitios %>% filter(., Ruído < -70)
View(silencio)
coordinates(silencio) <- c("lon","lat")
proj4string(silencio) <- proj4string(municipios)
silencio$Particular1  <- over(silencio,imoveisParticularesPB)$NOME_IMO9
silencio$Particular2  <- over(silencio,imoveisParticularesPB2)$NOME_ARE9
silencio$Publico1     <- over(silencio,imoveisPublicosPB)$NOME_IMO9
silencio$Publico2     <- over(silencio,imoveisPublicosPB2)$NOME_ARE9
silencio$UCs          <- over(silencio,UCs)$nome
silencio$AEREO1         <- dist2Line(silencio,l1) %>% as.data.frame() %>% select(., distance)
silencio$AEREO2         <- dist2Line(silencio,l2) %>% as.data.frame() %>% select(., distance)
silencio$AEREO3         <- dist2Line(silencio,l3) %>% as.data.frame() %>% select(., distance)
silencio$AEREO4         <- dist2Line(silencio,l4) %>% as.data.frame() %>% select(., distance)
silencio$AEREO5         <- dist2Line(silencio,l5) %>% as.data.frame() %>% select(., distance)
silencio %<>% as.data.frame()
names(silencio) <- c("lon", "lat", "Ruido", "Antenas", "Dmin", "Mun",
"Part1", "Part2", "Publ1", "Publ2", "UCs", "AEREO1",
"AEREO2", "AEREO3", "AEREO4","AEREO5")
silencio <- silencio %>% as.data.frame() %>%
mutate(., AEREO = pmin(AEREO1, AEREO2, AEREO3, AEREO4, AEREO5)) %>%
select(., -AEREO1,-AEREO2, -AEREO3, -AEREO4,-AEREO5)
silencio %<>% filter(., AEREO > 10000)
View(silencio)
silencio    <- sitios %>% filter(., Ruído < -70)
coordinates(silencio) <- c("lon","lat")
proj4string(silencio) <- proj4string(municipios)
silencio$Particular1  <- over(silencio,imoveisParticularesPB)$NOME_IMO9
silencio$Particular2  <- over(silencio,imoveisParticularesPB2)$NOME_ARE9
silencio$Publico1     <- over(silencio,imoveisPublicosPB)$NOME_IMO9
silencio$Publico2     <- over(silencio,imoveisPublicosPB2)$NOME_ARE9
silencio$UCs          <- over(silencio,UCs)$nome
silencio$AEREO1         <- dist2Line(silencio,l1) %>% as.data.frame() %>% select(., distance)
silencio$AEREO2         <- dist2Line(silencio,l2) %>% as.data.frame() %>% select(., distance)
silencio$AEREO3         <- dist2Line(silencio,l3) %>% as.data.frame() %>% select(., distance)
silencio$AEREO4         <- dist2Line(silencio,l4) %>% as.data.frame() %>% select(., distance)
silencio$AEREO5         <- dist2Line(silencio,l5) %>% as.data.frame() %>% select(., distance)
silencio %<>% as.data.frame()
View(silencio)
names(silencio) <- c("Mun","lon", "lat", "Ruido", "Antenas", "Dmin", "Opt","Mun",
"Part1", "Part2", "Publ1", "Publ2", "UCs", "AEREO1",
"AEREO2", "AEREO3", "AEREO4","AEREO5")
names(silencio) <- c("Mun","lon", "lat", "Ruido", "Antenas", "Dmin", "Opt",
"Part1", "Part2", "Publ1", "Publ2", "UCs", "AEREO1",
"AEREO2", "AEREO3", "AEREO4","AEREO5")
silencio <- silencio %>% as.data.frame() %>%
mutate(., AEREO = pmin(AEREO1, AEREO2, AEREO3, AEREO4, AEREO5)) %>%
select(., -AEREO1,-AEREO2, -AEREO3, -AEREO4,-AEREO5)
silencio %<>% filter(., AEREO > 10000)
leaflet() %>% addTiles(group = "OSM (default)") %>%
setView(lng = -37.55, lat = -6.97, zoom = 9) %>%
addCircles(lng = silencio$lon, lat = silencio$lat, radius = 500,
label = silencio$mun, color = "green", group = "sites") %>%
addCircles(lng = sitios$lon, lat = sitios$lat, radius = 40,
label = silencio$mun, color = "purple", group = "sites") %>%
addCircles(lng = ERBs$Longitude, lat = ERBs$Latitude, weight = 3, radius=40,
color="firebrick", stroke = TRUE, fillOpacity = 0.4, group = "ERBs") %>%
addPolygons(data = municipios, col="white" , weight = 2, fill = FALSE, label = municipios$NOME_MUN1,
group = "County limits") %>%
addScaleBar()
leaflet() %>% addTiles(group = "OSM (default)") %>%
setView(lng = -37.55, lat = -6.97, zoom = 9) %>%
addCircles(lng = silencio$lon, lat = silencio$lat, radius = 5000,
label = silencio$mun, color = "green", group = "sites") %>%
addCircles(lng = sitios$lon, lat = sitios$lat, radius = 40,
label = silencio$mun, color = "purple", group = "sites") %>%
addCircles(lng = ERBs$Longitude, lat = ERBs$Latitude, weight = 3, radius=40,
color="firebrick", stroke = TRUE, fillOpacity = 0.4, group = "ERBs") %>%
addPolygons(data = municipios, col="white" , weight = 2, fill = FALSE, label = municipios$NOME_MUN1,
group = "County limits") %>%
addScaleBar()
View(silencio)
source('~/Dropbox/Workspace/BINGO/GEOs/randomSites.R', echo=TRUE)
exectime/60
exectime/60
exectime
Signaltime/60
Signaltime
pal <- colorNumeric(c("#0C2C84", "#41B6C4", "#FFFFCC"), values(Paraiba),
na.color = "transparent")
P4S.latlon <- CRS("+proj=longlat +datum=WGS84")
hrr.shp <- readShapePoly("./GEODATA/municipiosPB/i3geomap_municipios_pb", verbose=TRUE, proj4string=P4S.latlon)
files       <- list.files("./RandomSites")
sitios      <- lapply(files, function(i) {
name <- paste("./RandomSites/",i,sep="");
read.csv(name)
})
sitios      <- do.call(rbind,sitios) %>% as.data.frame()
silencio    <- sitios %>% filter(., Ruído < -70)
View(silencio)
coordinates(silencio) <- c("lon","lat")
proj4string(silencio) <- proj4string(municipios)
silencio$Particular1  <- over(silencio,imoveisParticularesPB)$NOME_IMO9
silencio$Particular2  <- over(silencio,imoveisParticularesPB2)$NOME_ARE9
silencio$Publico1     <- over(silencio,imoveisPublicosPB)$NOME_IMO9
silencio$Publico2     <- over(silencio,imoveisPublicosPB2)$NOME_ARE9
silencio$UCs          <- over(silencio,UCs)$nome
silencio$AEREO1         <- dist2Line(silencio,l1) %>% as.data.frame() %>% select(., distance)
silencio$AEREO2         <- dist2Line(silencio,l2) %>% as.data.frame() %>% select(., distance)
silencio$AEREO3         <- dist2Line(silencio,l3) %>% as.data.frame() %>% select(., distance)
silencio$AEREO4         <- dist2Line(silencio,l4) %>% as.data.frame() %>% select(., distance)
silencio$AEREO5         <- dist2Line(silencio,l5) %>% as.data.frame() %>% select(., distance)
silencio %<>% as.data.frame()
names(silencio) <- c("Mun","lon", "lat", "Ruido", "Antenas", "Dmin", "Opt",
"Part1", "Part2", "Publ1", "Publ2", "UCs", "AEREO1",
"AEREO2", "AEREO3", "AEREO4","AEREO5")
silencio <- silencio %>% as.data.frame() %>%
mutate(., AEREO = pmin(AEREO1, AEREO2, AEREO3, AEREO4, AEREO5)) %>%
select(., -AEREO1,-AEREO2, -AEREO3, -AEREO4,-AEREO5)
silencio %<>% filter(., AEREO > 10000)
leaflet() %>% addTiles(group = "OSM (default)") %>%
setView(lng = -37.55, lat = -6.97, zoom = 9) %>%
addCircles(lng = silencio$lon, lat = silencio$lat, radius = 5000,
label = silencio$mun, color = "green", group = "sites") %>%
addCircles(lng = sitios$lon, lat = sitios$lat, radius = 40,
label = silencio$mun, color = "purple", group = "sites") %>%
addCircles(lng = ERBs$Longitude, lat = ERBs$Latitude, weight = 3, radius=40,
color="firebrick", stroke = TRUE, fillOpacity = 0.4, group = "ERBs") %>%
addPolygons(data = municipios, col="white" , weight = 2, fill = FALSE, label = municipios$NOME_MUN1,
group = "County limits") %>%
addScaleBar()
mapageral <- leaflet() %>% addTiles(group = "OSM (default)") %>%
setView(lng = -37.55, lat = -6.97, zoom = 9) %>%
addCircles(lng = silencio$lon, lat = silencio$lat, radius = 5000,
label = silencio$mun, color = "green", group = "sites") %>%
addCircles(lng = sitios$lon, lat = sitios$lat, radius = 40,
label = silencio$mun, color = "purple", group = "sites") %>%
addCircles(lng = ERBs$Longitude, lat = ERBs$Latitude, weight = 3, radius=40,
color="firebrick", stroke = TRUE, fillOpacity = 0.4, group = "ERBs") %>%
addPolygons(data = municipios, col="white" , weight = 2, fill = FALSE, label = municipios$NOME_MUN1,
group = "County limits") %>%
addScaleBar()
silencioDF <- silencio
coordinates(ERBs) <- c("Longitude","Latitude")
coordinates(silencio) <- c("lon","lat")
sitiosZoom <- function(s, z, h){
sitio <- silencio
passo <- z
n <- s
Xlim <- c(sitio$lon[[n]]-passo,sitio$lon[[n]]+passo)
Ylim <- c(sitio$lat[[n]]-passo,sitio$lat[[n]]+passo)
Extend <- c(unlist(Xlim),unlist(Ylim))
mapa <- crop(Paraiba, extent(Xlim[[1]],Xlim[[2]], Ylim[[1]], Ylim[[2]]))
# Gaussian filter
#gf <- focalWeight(mapa, 2, "Gauss")
#mapa <- focal(mapa, w=gf)
zmin <- (minValue(mapa) %/% 100) * 100
zmax <- (maxValue(mapa) %/% 100) * 100
my.at <- seq(zmin, zmax, h)
zoomMap<- levelplot(Paraiba,
layers = 1,
contour = TRUE,
xlim = Xlim,
ylim = Ylim,
at = my.at,
drop.unused.levels = TRUE,
margin = FALSE,
par.settings = viridisTheme()
)
result <- zoomMap + layer(sp.points(ERBs, col = "red", pch="+", cex=1)) +
layer(sp.lines(hrr.shp, col = "white", lwd = 0.8))+
layer(sp.points(silencio, col = "darkorange1", cex=1, pch = 9))
print(result)
}
sitiosZoom(1,0.1,50)
sitiosZoom(1,0.2,50)
source('~/Dropbox/Workspace/BINGO/GEOs/analisaRandom.R', echo=TRUE)
mapageral
View(sitios)
silencio    <- sitios %>% filter(., Ruído < -69)
coordinates(silencio) <- c("lon","lat")
proj4string(silencio) <- proj4string(municipios)
silencio$Particular1  <- over(silencio,imoveisParticularesPB)$NOME_IMO9
silencio$Particular2  <- over(silencio,imoveisParticularesPB2)$NOME_ARE9
silencio$Publico1     <- over(silencio,imoveisPublicosPB)$NOME_IMO9
silencio$Publico2     <- over(silencio,imoveisPublicosPB2)$NOME_ARE9
silencio$UCs          <- over(silencio,UCs)$nome
silencio$AEREO1         <- dist2Line(silencio,l1) %>% as.data.frame() %>% select(., distance)
silencio$AEREO2         <- dist2Line(silencio,l2) %>% as.data.frame() %>% select(., distance)
silencio$AEREO3         <- dist2Line(silencio,l3) %>% as.data.frame() %>% select(., distance)
silencio$AEREO4         <- dist2Line(silencio,l4) %>% as.data.frame() %>% select(., distance)
silencio$AEREO5         <- dist2Line(silencio,l5) %>% as.data.frame() %>% select(., distance)
silencio %<>% as.data.frame()
names(silencio) <- c("Mun","lon", "lat", "Ruido", "Antenas", "Dmin", "Opt",
"Part1", "Part2", "Publ1", "Publ2", "UCs", "AEREO1",
"AEREO2", "AEREO3", "AEREO4","AEREO5")
silencio <- silencio %>% as.data.frame() %>%
mutate(., AEREO = pmin(AEREO1, AEREO2, AEREO3, AEREO4, AEREO5)) %>%
select(., -AEREO1,-AEREO2, -AEREO3, -AEREO4,-AEREO5)
silencio %<>% filter(., AEREO > 10000)
mapageral <- leaflet() %>% addTiles(group = "OSM (default)") %>%
setView(lng = -37.55, lat = -6.97, zoom = 9) %>%
addCircles(lng = silencio$lon, lat = silencio$lat, radius = 5000,
label = silencio$mun, color = "green", group = "sites") %>%
addCircles(lng = sitios$lon, lat = sitios$lat, radius = 40,
label = silencio$mun, color = "purple", group = "sites") %>%
addCircles(lng = ERBs$Longitude, lat = ERBs$Latitude, weight = 3, radius=40,
color="firebrick", stroke = TRUE, fillOpacity = 0.4, group = "ERBs") %>%
addPolygons(data = municipios, col="white" , weight = 2, fill = FALSE, label = municipios$NOME_MUN1,
group = "County limits") %>%
addScaleBar()
mapageral
visited     <- read_excel("./DATA/sitesvisited.xlsx")
visitados   <- verificaSitios(visited)
View(visited)
visited     <- read_excel("./DATA/sitesvisited.xlsx")
visitados   <- verificaSitios(visited)
visited     <- select(visited, lon, lat)
visitados   <- verificaSitios(visited)
#Analisa dados aleatórios obtidos em randomSites.T
#Carrega dados auxiliares
library(tictoc)
source("./findSites.R")
pal <- colorNumeric(c("#0C2C84", "#41B6C4", "#FFFFCC"), values(Paraiba),
na.color = "transparent")
P4S.latlon <- CRS("+proj=longlat +datum=WGS84")
hrr.shp <- readShapePoly("./GEODATA/municipiosPB/i3geomap_municipios_pb", verbose=TRUE, proj4string=P4S.latlon)
#Carrega todos os arquivos em ./RandomSites
files       <- list.files("./RandomSites")
sitios      <- lapply(files, function(i) {
name <- paste("./RandomSites/",i,sep="");
read.csv(name)
})
sitios      <- do.call(rbind,sitios) %>% as.data.frame()
visited     <- read_excel("./DATA/sitesvisited.xlsx")
visited     <- select(visited, lon, lat)
View(sites)
visitados   <- verificaSitios(visited)
View(visitados)
visitados   <- merge(visitados, sites, by= c("lon","lat"))
View(visitados)
silencio    <- sitios %>% filter(., Ruído < -67)
coordinates(silencio) <- c("lon","lat")
proj4string(silencio) <- proj4string(municipios)
silencio$Particular1  <- over(silencio,imoveisParticularesPB)$NOME_IMO9
silencio$Particular2  <- over(silencio,imoveisParticularesPB2)$NOME_ARE9
silencio$Publico1     <- over(silencio,imoveisPublicosPB)$NOME_IMO9
silencio$Publico2     <- over(silencio,imoveisPublicosPB2)$NOME_ARE9
silencio$UCs          <- over(silencio,UCs)$nome
silencio$AEREO1         <- dist2Line(silencio,l1) %>% as.data.frame() %>% select(., distance)
silencio$AEREO2         <- dist2Line(silencio,l2) %>% as.data.frame() %>% select(., distance)
silencio$AEREO3         <- dist2Line(silencio,l3) %>% as.data.frame() %>% select(., distance)
silencio$AEREO4         <- dist2Line(silencio,l4) %>% as.data.frame() %>% select(., distance)
silencio$AEREO5         <- dist2Line(silencio,l5) %>% as.data.frame() %>% select(., distance)
silencio %<>% as.data.frame()
names(silencio) <- c("Mun","lon", "lat", "Ruido", "Antenas", "Dmin", "Opt",
"Part1", "Part2", "Publ1", "Publ2", "UCs", "AEREO1",
"AEREO2", "AEREO3", "AEREO4","AEREO5")
silencio <- silencio %>% as.data.frame() %>%
mutate(., AEREO = pmin(AEREO1, AEREO2, AEREO3, AEREO4, AEREO5)) %>%
select(., -AEREO1,-AEREO2, -AEREO3, -AEREO4,-AEREO5)
silencio %<>% filter(., AEREO > 10000)
mapageral <- leaflet() %>% addTiles(group = "OSM (default)") %>%
setView(lng = -37.55, lat = -6.97, zoom = 9) %>%
addCircles(lng = silencio$lon, lat = silencio$lat, radius = 5000,
label = silencio$mun, color = "green", group = "sites") %>%
addCircles(lng = sitios$lon, lat = sitios$lat, radius = 40,
label = silencio$mun, color = "purple", group = "sites") %>%
addCircles(lng = ERBs$Longitude, lat = ERBs$Latitude, weight = 3, radius=40,
color="firebrick", stroke = TRUE, fillOpacity = 0.4, group = "ERBs") %>%
addPolygons(data = municipios, col="white" , weight = 2, fill = FALSE, label = municipios$NOME_MUN1,
group = "County limits") %>%
addScaleBar()
mapageral
CampinaGrande   <- geocode("Campina Grande Paraiba Brasil")
RCampinaGrande   <- randomSitios(n,CampinaGrande[[1]]-delta,CampinaGrande[[1]]+delta,
CampinaGrande[[2]]-delta,CampinaGrande[[2]]+delta,seed,
"./RandomSites/CampinaGrande.csv")
randomSitios <- function(n,xmin,xmax,ymin,ymax,seed,name){
set.seed(seed)
lat <- runif(n,ymin,ymax)
lon <- runif(n,xmin,xmax)
RandomSites <- cbind(lon,lat) %>% as.data.frame()
coordinates(RandomSites) <- c("lon","lat")
proj4string(RandomSites) <- proj4string(municipios)
RandomSites$mun <- over(RandomSites,municipios)$NOME_MUN1
#RandomSites %<>% select(., lon, lat)
RandomSites <- as.data.frame(RandomSites) %>% filter(.,!is.na(mun))
noiseRandom <- verificaSitios(RandomSites)
coordinates(noiseRandom) <- c("lon","lat")
proj4string(noiseRandom) <- proj4string(municipios)
noiseRandom$mun <- over(noiseRandom,municipios)$NOME_MUN1 %>% as.data.frame()
#silencio    <- filter(noiseRandom, Ruído < -70)
write.csv(noiseRandom,name, row.names = FALSE)
return(as.data.frame(noiseRandom))
}
#Localiza pontos aleatórios
#source("./dataLoading.R")
library(rgeos)
library(ggmap)
library(tictoc)
source("./findSites.R")
#------------------------------------------------------
randomSitios <- function(n,xmin,xmax,ymin,ymax,seed,name){
set.seed(seed)
lat <- runif(n,ymin,ymax)
lon <- runif(n,xmin,xmax)
RandomSites <- cbind(lon,lat) %>% as.data.frame()
coordinates(RandomSites) <- c("lon","lat")
proj4string(RandomSites) <- proj4string(municipios)
RandomSites$mun <- over(RandomSites,municipios)$NOME_MUN1
#RandomSites %<>% select(., lon, lat)
RandomSites <- as.data.frame(RandomSites) %>% filter(.,!is.na(mun))
noiseRandom <- verificaSitios(RandomSites)
coordinates(noiseRandom) <- c("lon","lat")
proj4string(noiseRandom) <- proj4string(municipios)
noiseRandom$mun <- over(noiseRandom,municipios)$NOME_MUN1 %>% as.data.frame()
#silencio    <- filter(noiseRandom, Ruído < -70)
write.csv(noiseRandom,name, row.names = FALSE)
return(as.data.frame(noiseRandom))
}
#A little benchmark
#tic()
#Signal(c(sites[1,]$lon,sites[1,]$lat))
#exectime <- toc()
#Signaltime <- exectime$toc - exectime$toc
# 3.414 sec elapsed
#############
seed  <- 11
n     <- 200
delta <- 0.25 #Raio de 120km
CampinaGrande   <- geocode("Campina Grande Paraiba Brasil")
RCampinaGrande   <- randomSitios(n,CampinaGrande[[1]]-delta,CampinaGrande[[1]]+delta,
CampinaGrande[[2]]-delta,CampinaGrande[[2]]+delta,seed,
"./RandomSites/CampinaGrande.csv")
seed  <- 12
SJTapada        <- geocode("São José da Lagoa Tapada Paraiba Brasil")
RSJTapada        <- randomSitios(n,SJTapada[[1]]-delta,SJTapada[[1]]+delta,
SJTapada[[2]]-delta,SJTapada[[2]]+delta,seed,
"./RandomSites/SJTapada.csv")
View(sites)
source('~/Dropbox/Workspace/BINGO/GEOs/analisaRandom.R', echo=TRUE)
View(silencio)
ggplot()+
geom_path(data = municipios, aes(x = lon, y = lat, group = group))+
geom_point(data = ERBs, aes(x=Longitude, y=Latitude), col = "red", pch="+", cex=1)+
geom_point(data = sitios, aes(x=lon, y=lat), col = "dodgerblue4", pch=9, cex=1)+
geom_point(data = silencio, aes(x=lon, y=lat), col = "gray48", pch=9, cex=1)+
coord_map()
erbs <- ERBs %>% as.data.frame()
ggplot()+
geom_path(data = municipios, aes(x = lon, y = lat, group = group))+
geom_point(data = ERBs, aes(x=Longitude, y=Latitude), col = "red", pch="+", cex=1)+
geom_point(data = sitios, aes(x=lon, y=lat), col = "dodgerblue4", pch=9, cex=1)+
geom_point(data = silencio, aes(x=lon, y=lat), col = "gray48", pch=9, cex=1)+
coord_map()
erbs <- ERBs %>% as.data.frame()
ggplot()+
geom_path(data = municipios, aes(x = lon, y = lat, group = group))+
geom_point(data = erbs, aes(x=Longitude, y=Latitude), col = "red", pch="+", cex=1)+
geom_point(data = sitios, aes(x=lon, y=lat), col = "dodgerblue4", pch=9, cex=1)+
geom_point(data = silencio, aes(x=lon, y=lat), col = "gray48", pch=9, cex=1)+
coord_map()
View(sitios)
View(silencio)
View(erbs)
erbs <- ERBs %>% as.data.frame()
ggplot()+
geom_path(data = municipios, aes(x = long, y = lat, group = group))+
geom_point(data = erbs, aes(x=Longitude, y=Latitude), col = "red", pch="+", cex=1)+
geom_point(data = sitios, aes(x=lon, y=lat), col = "dodgerblue4", pch=9, cex=1)+
geom_point(data = silencio, aes(x=lon, y=lat), col = "gray48", pch=9, cex=1)+
coord_map()
erbs <- ERBs %>% as.data.frame()
ggplot()+
geom_path(data = municipios, aes(x = long, y = lat, group = group))+
geom_point(data = erbs, aes(x=Longitude, y=Latitude), col = "red", pch="+", cex=1)+
geom_point(data = sitios, aes(x=lon, y=lat), col = "gray48", pch=9, cex=1)+
geom_point(data = silencio, aes(x=lon, y=lat), col = "dodgerblue4", pch=9, cex=1)+
coord_map()
sitiosZoom(125,0.2,50)
