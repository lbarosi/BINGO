list.files()
list.files(~/)
install_github("slidifyLibraries", "ramnathv", ref="dev")
livrary("devtools")
library("devtools")
install_github("slidifyLibraries", "ramnathv", ref="dev")
library("slidify")
library("slidify")
library("devtools")
library("slidify")
install.packages("shiny")
<a class="btn btn-large btn-primary" rel="popover" data-content="<h1>Matrículas</h1>  Desvínculo Teste" data-original-title="SCAO" id='example'>PRE</a>
install.packages(c("rj", "rj.gd"), repos="http://download.walware.de/rj-2.0")
install.packages(c("rj", "rj.gd"), repos="http://download.walware.de/rj-2.0")
install.packages(c("rj", "rj.gd"), repos="http://download.walware.de/eclipse-3.8/site-statet-03.03.02.zip")
install.packages("stringi")
source("forplad-duracao.R")
durMODA
print(tabI, type = "latex")
library(DiagrammeR)
cores <- c("pink", "LavenderBlush", "Thistle", "SlateBlue", "Indigo", "lavender", "Chocolate",
"Sienna", "DodgerBlue", "Navy")
grViz("
digraph dot {
graph [layout = dot]
node [shape = circle,
style = filled,
color = grey,
label = '']
node [fillcolor = '@@1-1' ]
a b c
node [fillcolor = green]
d e f
node [fillcolor = orange]
edge [color = grey, arrowhead = none, alpha = 0.2, penwidth = 0.1]
a -> {d e f}
b -> {d e f}
c -> {d e f}
}
[1]: cores
")
library(DiagrammeR)
cores <- c("pink", "LavenderBlush", "Thistle", "SlateBlue", "Indigo", "lavender", "Chocolate",
"Sienna", "DodgerBlue", "Navy")
grViz("
digraph dot {
graph [layout = dot]
node [shape = circle,
style = filled,
color = grey,
label = '']
node [fillcolor = '@@1-1' ]
a b c
node [fillcolor = '@@1-2]
d e f
node [fillcolor = orange]
edge [color = grey, arrowhead = none, alpha = 0.2, penwidth = 0.1]
a -> {d e f}
b -> {d e f}
c -> {d e f}
}
[1]: cores
")
grViz("
digraph dot {
graph [layout = dot]
node [shape = circle,
style = filled,
color = grey,
label = '']
node [fillcolor = '@@1-1' ]
a b c
node [fillcolor = '@@1-2']
d e f
node [fillcolor = orange]
edge [color = grey, arrowhead = none, alpha = 0.2, penwidth = 0.1]
a -> {d e f}
b -> {d e f}
c -> {d e f}
}
[1]: cores
")
grViz("
digraph dot {
graph [layout = dot]
node [shape = circle,
style = filled,
color = grey,
label = '']
node [fillcolor = '@@1-1' ]
a b c
node [fillcolor = '@@1-2']
d e f
node [fillcolor = orange]
edge [color = grey, arrowhead = none, alpha = 0.2, penwidth = 0.1]
a -> {b}
b -> {c}
c -> {d}
}
[1]: cores
")
grViz("
digraph dot {
graph [layout = dot]
node [shape = circle,
style = filled,
color = grey,
label = '']
node [fillcolor = '@@1-1' ]
a b c
node [fillcolor = '@@1-2']
d e f
node [fillcolor = orange]
edge [color = grey, arrowhead = none, alpha = 0.2, penwidth = 0.1]
a -> {d e f}
b -> {d e f}
c -> {d e f}
}
[1]: cores
")
d <- 105^2/(2*250)
a <- 250
v <- 105 * 1000/3600
d <- v^2/(2*a)
9*4^2/(2*5)+9*3*7
9/5
1,8*9/2
1.8*9/2
1.8*3
1.8*9/2
5.4*4
21.6+8.1
1.2*9.8*tan(25)
1.2*9.8*tan(radians(25)
)
rad()
?tan
sin(30)
sin(90)
sin(radian(90))
?sin
?rad
25/0,5
25/0.5
-1.5*cos(PI*28/180)
-1.5*cos(Pi*28/180)
Pi
PI
pi
-1.5*cos(pi*28/180)
sqrt(100²+200²)
sqrt(100^2+200^2)
atan(-1/2)
atan(-1/2)*180/pi
9.8*250*sin(30*pi/180)+5000*cos(30*pi/180)
5555*0.22
5000*sin(30*pi/180)-250*9.8*cos(30*pi/180)
9.8*250*sin(30*pi/180)-5000*cos(30*pi/180)
4*pi^2*(15000000+6380000)/(865*3600)^2
4*pi^2*(15000000+6380000)/(8.65*3600)^2
sqrt(300*2/9.8)
(-10 + sqrt(2*9.8*300-10^2))/9.8
(-10 - sqrt(2*9.8*300-10^2))/9.8
7.82-6.737
sitios <- read.csv("./sitesvisited.csv")
setwd("~/Dropbox/Workspace/BINGO/CaririCampanha")
sitios <- read.csv("./sitesvisited.csv")
View(sitios)
View(sitios)
View(sitios)
#Localiza pontos aleatórios
#source("./dataLoading.R")
library(rgeos)
library(ggmap)
library(tictoc)
source("./findSites.R")
#------------------------------------------------------
randomSitios <- function(n,xmin,xmax,ymin,ymax,seed,name){
set.seed(seed)
lat <- runif(n,ymin,ymax)
lon <- runif(n,xmin,xmax)
RandomSites <- cbind(lon,lat) %>% as.data.frame()
coordinates(RandomSites) <- c("lon","lat")
proj4string(RandomSites) <- proj4string(municipios)
RandomSites$mun <- over(RandomSites,municipios)$NOME_MUN1
#RandomSites %<>% select(., lon, lat)
RandomSites <- as.data.frame(RandomSites) %>% filter(.,!is.na(mun))
noiseRandom <- verificaSitios(RandomSites)
coordinates(noiseRandom) <- c("lon","lat")
proj4string(noiseRandom) <- proj4string(municipios)
noiseRandom$mun <- over(noiseRandom,municipios)$NOME_MUN1 %>% as.data.frame()
#silencio    <- filter(noiseRandom, Ruído < -70)
write.csv(noiseRandom,name, row.names = FALSE, append = true)
return(as.data.frame(noiseRandom))
}
dadosSitios <- function(pontosdf, nome){
pontos <- pontosdf
coordinates(pontos) <- c("lon","lat")
proj4string(pontos) <- proj4string(municipios)
pontos$mun <- over(pontos,municipios)$NOME_MUN1
#RandomSites %<>% select(., lon, lat)
pontos <- as.data.frame(pontos) %>% filter(.,!is.na(mun))
noiseRandom <- verificaSitios(pontos)
coordinates(noiseRandom) <- c("lon","lat")
proj4string(noiseRandom) <- proj4string(municipios)
noiseRandom$mun <- over(noiseRandom,municipios)$NOME_MUN1
noiseRandom %<>% as.data.frame()
noiseRandom$optional <- TRUE
#silencio    <- filter(noiseRandom, Ruído < -70)
write.csv(noiseRandom,nome, row.names = FALSE)
return(noiseRandom)
}
sitios <- read.csv("./sitesvisited.csv")
seed  <- 1
n     <- 100
delta <- 0.03
Gato         <- randomSitios(n,sitios$lon[9]-delta,sitios$lon[9]+delta,
sitios$lat[9]-delta,sitios$lat[9]+delta,seed,
"./RandomSites/Gato.csv")
Urubu         <- randomSitios(n,sitios$lon[10]-delta,sitios$lon[10]+delta,
sitios$lat[10]-delta,sitios$lat[10]+delta,seed,
"./RandomSites/Urubu.csv")
Almas        <- randomSitios(n,sitios$lon[7]-delta,sitios$lon[7]+delta,
sitios$lat[7]-delta,sitios$lat[7]+delta,seed,
"./RandomSites/Almas.csv")
Palestina         <- randomSitios(n,sitios$lon[11]-delta,sitios$lon[11]+delta,
sitios$lat[11]-delta,sitios$lat[11]+delta,seed,
"./RandomSites/Gato.csv")
Gato         <- randomSitios(n,sitios$lon[9]-delta,sitios$lon[9]+delta,
sitios$lat[9]-delta,sitios$lat[9]+delta,seed,
"./RandomSites/Gato.csv")
Palestina         <- randomSitios(n,sitios$lon[11]-delta,sitios$lon[11]+delta,
sitios$lat[11]-delta,sitios$lat[11]+delta,seed,
"./RandomSites/Palestina.csv")
library(tictoc)
library(ggplot2)
library(ggmap)
library(ggsn)
library(gridExtra)
library(grid)
source("./findSites.R")
visitados <- read.csv("./sitesvisited.csv")
pal <- colorNumeric(c("#0C2C84", "#41B6C4", "#FFFFCC"), values(Paraiba),
na.color = "transparent")
P4S.latlon <- CRS("+proj=longlat +datum=WGS84")
hrr.shp <- readShapePoly("./GEODATA/municipiosPB/i3geomap_municipios_pb", verbose=FALSE, proj4string=P4S.latlon)
files       <- list.files("./RandomSites")
sitios      <- lapply(files, function(i) {
name <- paste("./RandomSites/",i,sep="");
read.csv(name)
})
sitios      <- do.call(rbind,sitios) %>% as.data.frame()
silencio    <- sitios %>% filter(., Ruído < -68)
dadosSitios(Gato, "./RandomSites/Gato.csv")
dadosSitios(Urubu, "./RandomSites/Urubu.csv")
library(tictoc)
library(ggplot2)
library(ggmap)
library(ggsn)
library(gridExtra)
library(grid)
source("./findSites.R")
visitados <- read.csv("./sitesvisited.csv")
pal <- colorNumeric(c("#0C2C84", "#41B6C4", "#FFFFCC"), values(Paraiba),
na.color = "transparent")
P4S.latlon <- CRS("+proj=longlat +datum=WGS84")
hrr.shp <- readShapePoly("./GEODATA/municipiosPB/i3geomap_municipios_pb", verbose=FALSE, proj4string=P4S.latlon)
files       <- list.files("./RandomSites")
sitios      <- lapply(files, function(i) {
name <- paste("./RandomSites/",i,sep="");
read.csv(name)
})
files       <- list.files("./RandomSites", pattern = "*.csv")
sitios      <- lapply(files, function(i) {
name <- paste("./RandomSites/",i,sep="");
read.csv(name)
})
sitios      <- do.call(rbind,sitios) %>% as.data.frame()
files       <- list.files("./RandomSites/", pattern = "*.csv")
sitios      <- lapply(files, function(i) {
name <- paste("./RandomSites/",i,sep="");
read.csv(name)
})
sitios      <- do.call(rbind,sitios) %>% as.data.frame()
sitios      <- lapply(files, function(i) {
name <- paste("./RandomSites/",i,sep="");
read.csv(name)
})
sitios      <- do.call(rbind,sitios) %>% as.data.frame()
silencio    <- sitios %>% filter(., Ruído < -68)
coordinates(silencio) <- c("lon","lat")
proj4string(silencio) <- proj4string(municipios)
silencio$Particular1  <- over(silencio,imoveisParticularesPB)$NOME_IMO9
silencio$Particular2  <- over(silencio,imoveisParticularesPB2)$NOME_ARE9
silencio$Publico1     <- over(silencio,imoveisPublicosPB)$NOME_IMO9
silencio$Publico2     <- over(silencio,imoveisPublicosPB2)$NOME_ARE9
silencio$UCs          <- over(silencio,UCs)$nome
silencio$AEREO1         <- dist2Line(silencio,l1) %>% as.data.frame() %>% select(., distance)
silencio$AEREO2         <- dist2Line(silencio,l2) %>% as.data.frame() %>% select(., distance)
silencio$AEREO3         <- dist2Line(silencio,l3) %>% as.data.frame() %>% select(., distance)
silencio$AEREO4         <- dist2Line(silencio,l4) %>% as.data.frame() %>% select(., distance)
silencio$AEREO5         <- dist2Line(silencio,l5) %>% as.data.frame() %>% select(., distance)
silencio %<>% as.data.frame()
names(silencio) <- c("Mun","lon", "lat", "Ruido", "Antenas", "Dmin", "Opt",
"Part1", "Part2", "Publ1", "Publ2", "UCs", "AEREO1",
"AEREO2", "AEREO3", "AEREO4","AEREO5")
silencio <- silencio %>% as.data.frame() %>%
mutate(., AEREO = pmin(AEREO1, AEREO2, AEREO3, AEREO4, AEREO5)) %>%
select(., -AEREO1,-AEREO2, -AEREO3, -AEREO4,-AEREO5)
silencio %<>% filter(., AEREO > 10000)
silencioDF <- silencio
coordinates(ERBs) <- c("Longitude","Latitude")
coordinates(silencioDF) <- c("lon","lat")
sitiosZoomXY <- function(LON, LAT, z, h, title){
sitio <- silencioDF
passo <- z
Xlim <- c(LON-passo,LON+passo)
Ylim <- c(LAT-passo,LAT+passo)
Extend <- c(unlist(Xlim),unlist(Ylim))
mapa <- crop(Paraiba, extent(Xlim[[1]],Xlim[[2]], Ylim[[1]], Ylim[[2]]))
zmin <- (minValue(mapa) %/% 100) * 100
zmax <- (maxValue(mapa) %/% 100) * 100
ponto <- c(LON, LAT) %>% t() %>% as.data.frame()
names(ponto) <- c("lon","lat")
my.at <- seq(zmin, zmax, h)
result<- levelplot(Paraiba,
layers = 1,
contour = TRUE,
xlim = Xlim,
ylim = Ylim,
at = my.at,
drop.unused.levels = TRUE,
margin = FALSE,
main = title,
par.settings = viridisTheme()
)+
layer(sp.points(ERBs, col = "red", pch="+", cex=1)) +
layer(sp.lines(hrr.shp, col = "white", lwd = 0.8))+
layer(sp.points(silencioDF, col = "darkorange1", cex=1, pch = 9)) +
layer({
ponto <- c(LON, LAT) %>% t() %>% as.data.frame()
names(ponto) <- c("lon","lat")
coordinates(ponto) <- c("lon","lat")
proj4string(ponto) <- P4S.latlon
sp.points(ponto, col = "red", cex=1, pch = 9)},
data = list(LON = LON, LAT = LAT, P4S.latlon = P4S.latlon))
print(result)
}
relevoSitio <- function(n,z,h){
Lon <- visitados$lon[n] %>% as.numeric()
Lat <- visitados$lat[n] %>% as.numeric()
titulo <- visitados$NOME[n] %>% as.character()
sitiosZoomXY(Lon, Lat,z,h,titulo)
}
pontoGmap <- function(n, Zoom, mtype){
x <- visitados$lon[n]
y <- visitados$lat[n]
title <- visitados$NOME[n] %>% as.character()
erb <- ERBs %>% as.data.frame()
names(erb) <- c("op","lat","lon","dist","azi")
#distGeo(c(x,y),c(x+0.01,y))
ponto <- get_map(location= c(lon=x, lat = y),
source = "google",
maptype = mtype,
zoom = Zoom
)
pontoC <- c(x,y) %>%  t() %>% as.data.frame()
names(pontoC) <- c("lon","lat")
bbox <- attr(ponto, "bb") %>% as.list()
pointsC <- dplyr::filter(silencio, lat > bbox[1] & lat <= bbox[3])
pointsC <- dplyr::filter(silencio, lon > bbox[2] & lon < bbox[4] )
erbs    <- dplyr::filter(erb, lat > bbox[1] & lat <= bbox[3])
erbs    <- dplyr::filter(erb, lon > bbox[2] & lon < bbox[4] )
ggmap(ponto) +
geom_point(aes(x = lon, y = lat), data = pointsC, color = "yellow", size = 4, pch = 13)+
geom_point(aes(x = lon, y = lat), data = pontoC, color = "darkorange", size = 4, pch = 8)+
geom_point(aes(x = lon, y = lat), data = erbs, color = "firebrick", size = 4, pch = "+")+
geom_path(data = municipios, aes(x = long, y = lat, group = group), col = "white", lwd = 0.3, lty = "dotdash")+
ggtitle(paste("lon= ",round(pontoC$lon,4),",lat= ", round(pontoC$lat,4)))
}
mosaico <- function(nponto){
p1 <- relevoSitio(nponto,0.05,25)
p2 <- pontoGmap(nponto,17,"hybrid")
p3 <- pontoGmap(nponto,15,"terrain")
p4 <- pontoGmap(nponto,11,"roadmap")
mosaico <- grid.arrange(p1,p2,p3,p4, ncol=2)
print(mosaico)
}
View(silencio)
mosaico(9)
png(filename="./MAPAS-Campanha3/VaoDoGato.png",
units = "px",
width = 5000,
height = 5000,
pointsize = 12,
res = 300)
mosaico(9)
dev.off()
png(filename="./MAPAS-Campanha3/Almas.png",
units = "px",
width = 5000,
height = 5000,
pointsize = 12,
res = 300)
mosaico(7)
dev.off()
png(filename="./MAPAS-Campanha3/Urubu.png",
units = "px",
width = 5000,
height = 5000,
pointsize = 12,
res = 300)
mosaico(10)
dev.off()
png(filename="./MAPAS-Campanha3/Palestina.png",
units = "px",
width = 5000,
height = 5000,
pointsize = 12,
res = 300)
mosaico(11)
dev.off()
